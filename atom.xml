<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>白玉为堂金为马</title>
  
  <subtitle>70%有趣的灵魂</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.noddl.me/"/>
  <updated>2019-03-18T16:27:29.324Z</updated>
  <id>http://www.noddl.me/</id>
  
  <author>
    <name>周左左</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Capture Form Post Request Crossing The Page</title>
    <link href="http://www.noddl.me/2019/03/19/chrome-post-form/"/>
    <id>http://www.noddl.me/2019/03/19/chrome-post-form/</id>
    <published>2019-03-18T16:00:05.972Z</published>
    <updated>2019-03-18T16:27:29.324Z</updated>
    
    <content type="html"><![CDATA[<p>Capturing the detail message of the form post request is not easy as we imagine by  Chrome Dev tool, especially in some complex situations.<br><a id="more"></a></p><p>In lots of cases, we just are asked to capture requests sent from the current page, which is so easy that opening the network tool can cope. However, few day ago, I met a more complex problem that I had to capture the request of form post.</p><p>Luckily, I handled the same problem before. So I check the “Preserve Log” box in the top of network tab. It ensure chrome will capture all requests, though they are cross the page ones.</p><p>But it seems not work in the current situation. Because this time, the request will trigger a download event, and then, chrome will close the new tab immediately. That means, I never have enough time to see the detail message of this request though I have captured it. After visiting lots of approaches, I summarize them:</p><h2 id="Use-Preserve-Log"><a href="#Use-Preserve-Log" class="headerlink" title="Use Preserve Log"></a>Use Preserve Log</h2><p>This way is not fit to me.</p><h2 id="Use-Proxy"><a href="#Use-Proxy" class="headerlink" title="Use Proxy"></a>Use Proxy</h2><p>Use proxy tool to visit websites, which make all requests recorded in the proxy logs. We can check out them all easily.</p><p>Approaches above are not suitable for my situation. Because of company rules, the proxy cannot work correctly.</p><p>Finally, I found a tricky solution to solve it: Cut off the connection of network. Once cutting off it, the download event cannot be trigger after submitting the request, and the new page will be preserved in the browser. By this time, we can refresh the new page and see the request captured in the chrome dev tool. </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Capturing the detail message of the form post request is not easy as we imagine by  Chrome Dev tool, especially in some complex situations.&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.noddl.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>聊天记录被监控这件事</title>
    <link href="http://www.noddl.me/2019/03/04/privacy/"/>
    <id>http://www.noddl.me/2019/03/04/privacy/</id>
    <published>2019-03-04T07:24:53.920Z</published>
    <updated>2019-03-04T07:44:37.810Z</updated>
    
    <content type="html"><![CDATA[<p>猪圈里的猪，一边吃着糠一边讨论角落里的摄像头。<br><a id="more"></a></p><p>我没什么隐私，是从小就开始的。</p><p>小学没有自己的房间，收到了一些奇奇怪怪的纸条也不知道放哪，最后全部撕碎冲进马桶。初中开始住校生活，随笔要定时上交给老师，于是把日志写到其他本子上，记录着一些平日里奇奇怪怪的想法。可惜每次换教室的时候，所有书本都要带回去，日记本还是被看到了。从此我再没写过日志。</p><p>索性的是，我并没有成为一个自闭的人。我还是积极地与周围的人，与父母交流自己的想法，厌世的、消极的、关于爱情的。</p><p>虽然我的性格没有如此变得糟糕，但我还是变成了一个不在乎隐私的人。我相信，只要我把想法写出来、说出来，就一定会有人知道。我开始不关心隐私这件事，真正的隐私只能藏在心里。</p><p><strong>不想被别人听见就不要说，不想被别人看见就不要做。</strong>一旦我说了，我做了。那我就对我的言行负责，我愿意为自己做的坏事，说过的坏话承担。</p><p>也不知道从什么时候开始，社会上流传着一些都市传说。是关于某些知名聊天软件会监控用户的聊天记录的奇闻异事。最近愈演愈烈，连国外人都插上了一脚。说什么聊天记录存在了公网分布式数据库里，还看见了什么什么。公网数据库这个概念，只要学过点计算机的人都不会这么设计。</p><p>所以隐私可能对我的概念跟很多人不同，我的隐私是我藏在心里想说的想做的，而可能很多人隐私是，已经做了说了的事情却不能见光的那种吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;猪圈里的猪，一边吃着糠一边讨论角落里的摄像头。&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://www.noddl.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>《可爱猫咪》</title>
    <link href="http://www.noddl.me/2019/01/13/cute-mimi/"/>
    <id>http://www.noddl.me/2019/01/13/cute-mimi/</id>
    <published>2019-01-13T15:35:03.578Z</published>
    <updated>2019-02-12T14:19:23.734Z</updated>
    
    <content type="html"><![CDATA[<p>她的可爱猫咪和她的我。</p><a id="more"></a><p><img src="http://static.noddl.me/498B2BE66D114BEE318963C629182E56.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">朋友圈发了一张照片</span><br><span class="line">我家可爱的猫咪</span><br><span class="line"></span><br><span class="line">姑娘问我</span><br><span class="line">&quot;猫后面的女人是谁&quot;</span><br><span class="line">&quot;是一个喜欢猫的女孩子&quot;</span><br><span class="line">&quot;她究竟是喜欢猫还是猫的主人?&quot;</span><br><span class="line"></span><br><span class="line">她啊</span><br><span class="line">应该是喜欢我的</span><br><span class="line">但是我不知道她究竟是喜欢猫多一些</span><br><span class="line">还是喜欢我多一些</span><br><span class="line"></span><br><span class="line">毕竟</span><br><span class="line">我跟猫都是她养大的</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;她的可爱猫咪和她的我。&lt;/p&gt;
    
    </summary>
    
      <category term="诗" scheme="http://www.noddl.me/categories/%E8%AF%97/"/>
    
    
  </entry>
  
  <entry>
    <title>《海南姑娘》</title>
    <link href="http://www.noddl.me/2019/01/13/hainan-girl/"/>
    <id>http://www.noddl.me/2019/01/13/hainan-girl/</id>
    <published>2019-01-13T15:05:31.551Z</published>
    <updated>2019-02-27T12:26:41.367Z</updated>
    
    <content type="html"><![CDATA[<p>大过年的，握着手机颤颤巍巍像个帕金森，憋了半天硬是发不出一条简讯的彪哥。<br><a id="more"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">冬天没有太阳的日子里</span><br><span class="line">男生们就会抱在一起讲荤段子取暖</span><br><span class="line">今天轮到彪哥了</span><br><span class="line"></span><br><span class="line">到了晚上</span><br><span class="line">除了想着如何造娃</span><br><span class="line">他心里还想着一个姑娘</span><br><span class="line">海南姑娘</span><br><span class="line"></span><br><span class="line">或许是想飞去热带的岛屿打水漂</span><br><span class="line">也可能是姑娘名字里带晴</span><br><span class="line">一想起她</span><br><span class="line">失踪的太阳仿佛就在彪哥心里打滚</span><br><span class="line"></span><br><span class="line">撸猫的时候</span><br><span class="line">咬奶茶吸管的时候</span><br><span class="line">做春梦的时候</span><br><span class="line">彪哥都会想起她</span><br><span class="line"></span><br><span class="line">要是有她在身边啊</span><br><span class="line">等到夜深人静</span><br><span class="line">双手开始不老实</span><br><span class="line">一直搂着她</span><br><span class="line">不看积雪也不谈来春</span><br><span class="line"></span><br><span class="line">彪哥琢磨着</span><br><span class="line">喜欢一个人啊三四年</span><br><span class="line">一点也不难熬</span><br><span class="line">难受的是上海的冬天实在太冷</span><br><span class="line">他恨不得一张机票去海口过冬</span><br><span class="line">捏捏她的小脸蛋</span><br><span class="line">对着她的耳朵哈气</span><br><span class="line"></span><br><span class="line">其实彪哥才是个大怂包</span><br><span class="line">过年了也不知道如何问候一下</span><br><span class="line">借着三四瓶啤酒</span><br><span class="line">才发出如同群发一样的祝福：</span><br><span class="line">新年快乐啊。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大过年的，握着手机颤颤巍巍像个帕金森，憋了半天硬是发不出一条简讯的彪哥。&lt;br&gt;
    
    </summary>
    
      <category term="诗" scheme="http://www.noddl.me/categories/%E8%AF%97/"/>
    
    
  </entry>
  
  <entry>
    <title>《季风少年》</title>
    <link href="http://www.noddl.me/2019/01/13/see-the-youth-again/"/>
    <id>http://www.noddl.me/2019/01/13/see-the-youth-again/</id>
    <published>2019-01-13T15:01:11.650Z</published>
    <updated>2019-02-27T12:12:07.158Z</updated>
    
    <content type="html"><![CDATA[<p>他上了长途汽车，上了绿皮火车，上了飞机，最终上了一朵飘忽不定的云，最后，东南风再也无法追上他。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">六年前</span><br><span class="line">肖霸也是这样瘦骨嶙峋</span><br><span class="line">他想过当网管</span><br><span class="line">当电竞选手</span><br><span class="line">但最想当一个姑娘的丈夫</span><br><span class="line"></span><br><span class="line">当时他诗气风发</span><br><span class="line">我后来才知道</span><br><span class="line">他的诗</span><br><span class="line">一半是为姑娘写的：</span><br><span class="line"></span><br><span class="line">浦江的落日余晖好看</span><br><span class="line">语文课代表的手写体好看</span><br><span class="line">好看姑娘冲我翻白眼的时候最好看</span><br><span class="line"></span><br><span class="line">肖霸是真喜欢她</span><br><span class="line">游戏ID是她的名</span><br><span class="line">小说女主是她姓</span><br><span class="line">课上梦里</span><br><span class="line">全飘她的影子</span><br><span class="line"></span><br><span class="line">毕业那天</span><br><span class="line">肖霸把精心准备的巧克力扔了</span><br><span class="line">他怂得像个瘪气球</span><br><span class="line">跟他的朝思暮想断了线</span><br><span class="line"></span><br><span class="line">兴许是一个喜欢海风</span><br><span class="line">另一个喜欢苍茫</span><br><span class="line">姑娘飞去了上海</span><br><span class="line">瘪气球被东南风吹到了西安</span><br><span class="line">吹开了一个季风带</span><br><span class="line">吹进了一朵飘忽不定的云</span><br><span class="line"></span><br><span class="line">昨晚吃烧烤</span><br><span class="line">我问他高中写过的诗</span><br><span class="line">他说跳起来说当然记得</span><br><span class="line">一大口啤酒下肚</span><br><span class="line">半晌后听见他说</span><br><span class="line">还是算了吧</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;他上了长途汽车，上了绿皮火车，上了飞机，最终上了一朵飘忽不定的云，最后，东南风再也无法追上他。&lt;/p&gt;
    
    </summary>
    
      <category term="诗" scheme="http://www.noddl.me/categories/%E8%AF%97/"/>
    
    
  </entry>
  
  <entry>
    <title>《1880》</title>
    <link href="http://www.noddl.me/2019/01/13/1880/"/>
    <id>http://www.noddl.me/2019/01/13/1880/</id>
    <published>2019-01-13T14:55:42.971Z</published>
    <updated>2019-02-12T14:10:11.853Z</updated>
    
    <content type="html"><![CDATA[<p>1880 年距今很久了，就如同 2080 年离现在一样般得遥远，是一种说到却不做到的距离。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">18岁的时候</span><br><span class="line">我跟姑娘拉钩相约要到80</span><br><span class="line">刚过完20岁生日</span><br><span class="line">就一拍两散</span><br><span class="line">一滩浑水谁也不欠谁</span><br><span class="line"></span><br><span class="line">姑娘离开的时候</span><br><span class="line">送了我一本王小波的书</span><br><span class="line">《爱你就像爱生命》</span><br><span class="line"></span><br><span class="line">其实我知道她想表达什么</span><br><span class="line">但我却不能回应她</span><br><span class="line">因为她和我五线谱已经奏完了</span><br><span class="line"></span><br><span class="line">这不妨碍我把用过的如家会员卡</span><br><span class="line">狠狠地夹在了书的第99页</span><br><span class="line">三年来再没碰过</span><br><span class="line"></span><br><span class="line">其实书到是经常打开</span><br><span class="line">因为网吧会员卡就在第100页</span><br><span class="line">以前有你没它</span><br><span class="line">现在有它没你</span><br><span class="line"></span><br><span class="line">姑娘曾经问我</span><br><span class="line">她是我的什么</span><br><span class="line">我就开始胡诌</span><br><span class="line"></span><br><span class="line">1880年那会儿</span><br><span class="line">爱迪生搞了个电灯专利</span><br><span class="line">我说姑娘啊</span><br><span class="line">你就像我嘴里灯泡</span><br><span class="line">要把你含在嘴里</span><br><span class="line">拔也拔不出去</span><br><span class="line">照亮我前方黑暗的路</span><br><span class="line">在我的体内熠熠生辉</span><br><span class="line"></span><br><span class="line">可惜啊</span><br><span class="line">1880年距今太久</span><br><span class="line">是人都傻</span><br><span class="line">谁把灯泡含一辈子呢</span><br><span class="line">我跟她</span><br><span class="line">也总有一天要分开</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1880 年距今很久了，就如同 2080 年离现在一样般得遥远，是一种说到却不做到的距离。&lt;/p&gt;
    
    </summary>
    
      <category term="诗" scheme="http://www.noddl.me/categories/%E8%AF%97/"/>
    
    
  </entry>
  
  <entry>
    <title>Morgan Stanley实习</title>
    <link href="http://www.noddl.me/2018/12/18/intern_in_morgan_stanley/"/>
    <id>http://www.noddl.me/2018/12/18/intern_in_morgan_stanley/</id>
    <published>2018-12-18T13:58:43.703Z</published>
    <updated>2019-03-18T16:34:31.456Z</updated>
    
    <content type="html"><![CDATA[<p>工作时间：2018/07/09 - 2019/03/15<br>地点：Shanghai Morgan Stanley</p><a id="more"></a><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><h2 id="组别"><a href="#组别" class="headerlink" title="组别"></a>组别</h2><p>基础设施(Infrastructure)大组下的数据工程(Data engineering)组</p><h2 id="职位"><a href="#职位" class="headerlink" title="职位"></a>职位</h2><p>实习生</p><h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><p>QlikView是一个完整的商业分析软件，使开发者和分析者能够构建和部署强大的分析应用。QlikView应用使各种各样的终端用户以一个高度可视化，功能强大和创造性的方式，互动分析重要业务信息。</p><p>而我们项目组主要是为公司内部的QlikView提供可视化界面、数据传输以及数据存储等基础架构设计与实现。QlikView Workbench是基于QlikView之上，为公司内部以及客户提供文件共享、权限管理以及环境管理的项目，而我的任务是对 Legacy 的 QlikView Workbench Project进行整体重构。</p><p>在重构过程中需要涉及到诸如数据传输、存储查询以及用户交互等问题。这些问题不仅仅来自于后端(Backend)，也来自于直接与用户接触的前端客户端(Frontend Client)。所以我的具体工作是改造多个Services以及提供中间层，并完全重写前端页面，使用标准的 HTML5 来替代以前的Flash。</p><p>后端的问题有：</p><ol><li>来自于对传统SOAP传输方式的改造，使其符合RESTful标准。</li><li>数据库查询优化</li><li>服务之间的通信效率提高</li><li>数据脱敏(Data Masking)</li></ol><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>学到了大公司标准流程，用敏捷开发的软件工程开发模式来进行软件开发。使用Kanban和Scrum混合并存的方式进行项目进度、任务故事管理，有效地提高了开发效率。</p><p>在开发阶段，项目组按照公司开发标准，严格管理第三库(The third-party library)的下载与使用，控制编程风险并提高项目的安全性。</p><p>在部署阶段，采用Jenkins来执行CI/CD流程并自动部署到web container中。方便快捷，很大程度地屏蔽了业务开发人员对复杂devOps的操作，提高部署效率。</p><p>我还从许多同事身上学到了很多优秀的品质，对每一个项目认真负责，对需求方的一丝不苟等等。在摩根大氛围下，我还锻炼了我的英语口语能力以及写作能力。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作时间：2018/07/09 - 2019/03/15&lt;br&gt;地点：Shanghai Morgan Stanley&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://www.noddl.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>页面无法访问 - I tell you</title>
    <link href="http://www.noddl.me/2018/10/01/internal-server-error/"/>
    <id>http://www.noddl.me/2018/10/01/internal-server-error/</id>
    <published>2018-10-01T03:23:23.078Z</published>
    <updated>2019-02-12T14:21:23.789Z</updated>
    
    <content type="html"><![CDATA[<p>Web 开发，无论是本地调试开发还是最终部署上线，都可能遇到页面无法访问的情况。最快速的方法肯定是请个老法师帮忙把把关，其次都是靠自己总结的经验了…</p><a id="more"></a><h1 id="404-Checklist"><a href="#404-Checklist" class="headerlink" title="404 Checklist"></a>404 Checklist</h1><ul><li>Static files 没放在目录里，或者路径出错。</li><li>Web server 未能成功代理 Staticfiles，可能是代码写错了，或者是它压根没找到。</li><li>Url 填错了</li></ul><h1 id="404-之外的-Checklist"><a href="#404-之外的-Checklist" class="headerlink" title="404 之外的 Checklist"></a>404 之外的 Checklist</h1><ul><li>端口号与 hostname</li><li>端口安全组设置</li><li>针对特定端口防火墙放行</li><li>查看 Web server 的 log，检查报错信息</li><li>远程主机在国外，莫非… 😈</li><li>DNS 设置正确且等待解析完毕</li><li>Ping host 能成功吗？不成功很可能是网络连接问题</li><li>查看 Web application 接受的 request 以及报错信息</li><li>生产环境下，Web server 是否监听的是 0.0.0.0 下的端口</li><li>Https 证书获取与解析是否遇到了麻烦</li><li>Web server(Nginx、Apache)配置正确了吗</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Web 开发，无论是本地调试开发还是最终部署上线，都可能遇到页面无法访问的情况。最快速的方法肯定是请个老法师帮忙把把关，其次都是靠自己总结的经验了…&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.noddl.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Puppeteer与爬虫</title>
    <link href="http://www.noddl.me/2018/08/23/puppeteer/"/>
    <id>http://www.noddl.me/2018/08/23/puppeteer/</id>
    <published>2018-08-22T16:14:35.189Z</published>
    <updated>2018-08-29T11:35:28.745Z</updated>
    
    <content type="html"><![CDATA[<p>从很久以前开始就想着做一个通用爬虫，不写代码也能爬取尽可能多的网站。</p><a id="more"></a><h1 id="需求确定"><a href="#需求确定" class="headerlink" title="需求确定"></a>需求确定</h1><ol><li>支持门户类网站，页面结构不会太复杂，<strong>两个网站之间爬取的内容类型不能完全不同</strong>，也就意味着内容有固定HTML格式。</li><li>不写更多的代码是肯定的，想要爬取新站点，只需要添加URL与其他配置参数即可。</li><li>要能支持无验证码类型网站的登录。</li><li>支持执行JS：现在很多网站部分内容是JS动态生成的，如果不能执行JS脚本那么则获取不到内容。</li></ol><h1 id="难题"><a href="#难题" class="headerlink" title="难题"></a>难题</h1><ol><li>每个网站的HTML结构不同</li><li>部分网站内容由JS动态生成</li><li>虽然内容结构相似，但是仅限于人眼看上去差不多，但其实HTML文本还是有区别的</li><li>部分网站需要登录，意味着很可能需要提供不同的爬虫登录模式</li></ol><h1 id="方案选择"><a href="#方案选择" class="headerlink" title="方案选择"></a>方案选择</h1><h2 id="1-深度学习智能爬虫"><a href="#1-深度学习智能爬虫" class="headerlink" title="1. 深度学习智能爬虫"></a>1. 深度学习智能爬虫</h2><p>通过训练大量的sample让智能爬虫了解网站结构以及哪些是需要的信息。</p><h3 id="1-1-优点"><a href="#1-1-优点" class="headerlink" title="1.1 优点"></a>1.1 优点</h3><p>完美解决难题1与难题3</p><h3 id="1-2-弊端"><a href="#1-2-弊端" class="headerlink" title="1.2 弊端"></a>1.2 弊端</h3><p>JS动态生成怎么办？登录注册怎么办？<br>当然也可以采用别的解决方案去solve以上问题，然后由机器学习来support这部分的功能。但是有没有更简单的方法呢？</p><h2 id="2-传统爬虫-Legacy-Spider"><a href="#2-传统爬虫-Legacy-Spider" class="headerlink" title="2. 传统爬虫 Legacy Spider"></a>2. 传统爬虫 Legacy Spider</h2><h3 id="2-1-优点"><a href="#2-1-优点" class="headerlink" title="2.1 优点"></a>2.1 优点</h3><p>速度快，非常快。自由度很高。</p><h3 id="2-2-弊端"><a href="#2-2-弊端" class="headerlink" title="2.2 弊端"></a>2.2 弊端</h3><p>但是无法解决JS动态生成问题（没有现成的解决方案）。也无法解决难题4，如果一些网站做了简单的反爬虫，那么就要分别去处理。</p><h2 id="3-无头浏览器爬虫-Headless-Browser-Spider"><a href="#3-无头浏览器爬虫-Headless-Browser-Spider" class="headerlink" title="3. 无头浏览器爬虫 Headless Browser Spider"></a>3. 无头浏览器爬虫 Headless Browser Spider</h2><h3 id="3-1-优点"><a href="#3-1-优点" class="headerlink" title="3.1 优点"></a>3.1 优点</h3><p>操控浏览器click, input等行为可以模拟真实用户登录操作，从而解决登录问题；<br>支持加载执行JS，获取由JS动态生成的HTML内容。</p><h3 id="3-2-弊端"><a href="#3-2-弊端" class="headerlink" title="3.2 弊端"></a>3.2 弊端</h3><p>速度慢，而且方案不完全成熟，遇到网络问题从而crash几率高。</p><h1 id="详细方案"><a href="#详细方案" class="headerlink" title="详细方案"></a>详细方案</h1><p>所以最终了headless browser方案。使用google开发的puppeteer，再结合cheerio与正则标准库来解析获取到的HTML文本从而提取固定结构的内容。</p><h2 id="配置项目与可视化管理"><a href="#配置项目与可视化管理" class="headerlink" title="配置项目与可视化管理"></a>配置项目与可视化管理</h2><p><strong>global setting</strong>存储在Redis中，<strong>针对每个网站的Config</strong>存储在MongoDB中。</p><p>每个网站的配置大致包括：</p><ul><li>Username Input CSS Selector: 用户名输入框css selector</li><li>Password Input CSS Selector: 密码输入框css selector</li><li>Submit Button CSS Selector: 登录按钮css selector</li><li>Article Page URL: 文章列表页URL</li><li>Login Page URL: 登录页URL</li><li>Article CSS Selector: 文章列表css selector</li><li>Detail CSS Selector: 进入单篇文章link后，需要爬取的文章内容css selector</li><li>Username: 如果该网站需要登录，提供的用户名</li><li>Password: 如果该网站需要登录，提供的密码</li></ul><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>只需要提供网站的登录页面URL，人工获取到Username Input CSS Selector以及Password Input CSS Selector以及Submit Button CSS Selector，让浏览器去模拟input与click行为即可。点击完以后选择阻塞并等待网站跳转成功，或者也可以选择主动redirect到内容页面。</p><h2 id="执行JS"><a href="#执行JS" class="headerlink" title="执行JS"></a>执行JS</h2><p>无头浏览器默认加载JS并执行，但是有一点要注意的就是，需要等待到一些HTTP Request得到resp以后再进行下一步操作，毕竟Response里可能会存在我们需要的网站内容。</p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>根据Article CSS Selector获取到一段杂七杂八的HTML文本。里面包含了每篇文章的title与date。首先要split whole HTML text to separate article HTML text(中文难说)。用cheerio能很方便地解决这个问题。</p><p>随后用我自己写的正则表达式去匹配在单个article HTML text中的title, date与href。其中这步最容易出错，而且debug也很麻烦，我想着之后把它加入global setting作为一个config item。</p><p>获取a标签的href以后，进入到文章内容页。根据Detail CSS Selector获取到文章的内容，问题来了：各个网站以及各篇文章内容之间的HTML text格式也是千奇百怪，如果才能正确提取出所有文本内容呢？</p><p>目前我有两个方案：</p><ol><li>获取内容HTML text进行存储，然后在Display Layer用<strong>Rich Text Component</strong>进行完整还原。 </li><li>使用无头浏览器对该块内容进行截图，并进行存储，再由<strong>Image Component</strong>来进行展示。</li></ol><p>虽然方案1说了完美还原，其实也不是。因为网站包含各自了Style，而我们只有HTML text，所以还原出的文字样式以及排版也可能会受到影响。</p><p>方案2存储的只是图片，并不是文本格式，也算是曲线救国。目前采用的是这种，但是也会几个坑要踩，不一一列出了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>到这里，通用类爬虫大部分的需求也是实现了。虽然运行效率比较低，而且在Docker上部署也遇到了一些麻烦，但是差不多完成了一个懒癌的愿望。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从很久以前开始就想着做一个通用爬虫，不写代码也能爬取尽可能多的网站。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.noddl.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>vsonic威索尼克全家桶</title>
    <link href="http://www.noddl.me/2018/08/20/vsonic/"/>
    <id>http://www.noddl.me/2018/08/20/vsonic/</id>
    <published>2018-08-20T15:18:13.191Z</published>
    <updated>2018-08-29T11:46:16.621Z</updated>
    
    <content type="html"><![CDATA[<p>断断续续，持续四年的vsonic(威索尼克)系列耳机非专业测评。</p><a id="more"></a><p>大二伊始，一直用的廉价铁三角坏了，于是就开始物色差不多价位(150-300)的耳机。</p><h2 id="隔音降噪时代"><a href="#隔音降噪时代" class="headerlink" title="隔音降噪时代"></a>隔音降噪时代</h2><p>也不知道从哪里听来的消息，说是vsonic(威索尼克)家的耳机性价比高。其实我也不太懂，因为以前从未试过高品质耳机，也不知“千元以下听个响”，更不分不清楚电流来源是水电火电还是核电。</p><p>一开始完完全全就是被这种设计吸引了，红蓝配色。当时是京东配货的，我亲自跑到了中转点去提早提货。因为一直用的是没有隔音效果的耳机，于是第一次听的时候，就被惊艳到了。</p><p>张着嘴听完一首歌，非常满足。至此开始慢慢探索耳机，训练耳朵。</p><p><img src="https://img.alicdn.com/imgextra/i4/2580483446/TB2DGxFDeOSBuNjy0FdXXbDnVXa_!!2580483446.jpg_430x430q90.jpg" alt="VSD3s"></p><h2 id="音质时代"><a href="#音质时代" class="headerlink" title="音质时代"></a>音质时代</h2><p>用了快一年半，发现耳机在低音方面还是略有欠缺，部分声音依然听不出来。当然也可能是我耳朵本来就很木头。</p><p>于是向隔壁玩音乐的@樵樵同学寻求推荐，没想到他张口就是vsonic。</p><p>（到这里，我甚至开始怀疑自己在写vsonic的软文。）</p><p>他推荐了GR07，声称千元以下却能达到千元级别的音质。这是原话，并拿出了他自己的让我把玩。本着别人的耳机永远比我好的心态，我发现确实不错。更是在官网发现了GR07的带麦版本，终于不用拿着手机喊话了。入坑，进入音质追求时代。</p><p><img src="https://img.alicdn.com/imgextra/i4/2580483446/TB2OGW4aRDH8KJjSszcXXbDTFXa_!!2580483446.jpg_430x430q90.jpg" alt="GR07"></p><h2 id="穷三代时代"><a href="#穷三代时代" class="headerlink" title="穷三代时代"></a>穷三代时代</h2><p>本来我是不会换耳机的，起码在两年内。直到我的GR07被不长眼的车门夹坏了😢。于是又又开始物色新耳机。</p><p>此时我开始刻意避开vsonic，因为我在这期间接触了非常多类型的耳机，bose的主动降噪，森海的头戴出色音质，还有sony小豆豆极度便携。当然，也有airpods针对某款手机的超棒体验（可惜没一丝降噪）。</p><p>我开始纠结于蓝牙与有线的抉择中，蓝牙意味着牺牲音质而带来便携。当然如果能有一款降噪出色的蓝牙耳机（bose就是你）牺牲一些音质其实也无所谓。</p><p>但是考虑我的部分设备陈旧，我怀疑他们可能都不支持蓝牙连接。而且我发现诸多蓝牙耳机带着一个大大的项圈，反而令我感到携带上的不便。</p><p>头戴是根本不可能考虑的，因为我生活在水深火热的上海，耳机再罩上一个耳机，可以说是煲耳朵了。</p><p>挑来挑去，发现根本我的需求很难满足。但是，直到我发现了vsonic GR09。</p><p>我写软文的事情是不是石锤了？其实不是，GR09也并没有解决以上问题，有线耳机依旧让前端在我的脖子前牵着一根狗链😈。那么为什么我最后又选了GR09呢？</p><p><strong>因为买GR09送GR07w蓝牙耳机啊！</strong> GR09音质不然不必说，GR07W作为一款500-600价位的蓝牙耳机，也有一战之力。于是话不多说，立马入手GR09。</p><p>GR09具体使用如何，见这篇文章：<a href="https://zhuanlan.zhihu.com/p/26651339?utm_source=qq&amp;utm_medium=social" target="_blank" rel="noopener">决战动圈耳塞之巅！！！第四章——VSONIC GR09</a></p><p><del>（目前GR07W还没到使用体验以后补上。）</del></p><p><img src="https://img.alicdn.com/imgextra/i1/2580483446/TB2Vrk9D3aTBuNjSszfXXXgfpXa_!!2580483446.jpg_430x430q90.jpg" alt="GR09"></p><p><img src="https://img.alicdn.com/imgextra/i3/2580483446/TB1XAfHdBDH8KJjy1zeXXXjepXa_!!2-item_pic.png_430x430q90.jpg" alt="GR07w"></p><h2 id="蓝牙时代"><a href="#蓝牙时代" class="headerlink" title="蓝牙时代"></a>蓝牙时代</h2><p>不知道是我小米手机的原因还是GR07W的问题，连接一直很差，经常显示No media，但是却没有断开连接，需要手动去disconnect再连上。</p><p>隔音效果不错，可以抵挡掉一票外界杂音。但是如果连接的问题不解决，那么就是处于一直不可用的状态，在我这里体验很差。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;断断续续，持续四年的vsonic(威索尼克)系列耳机非专业测评。&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://www.noddl.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>Ukelele伴奏 父亲节排练</title>
    <link href="http://www.noddl.me/2018/06/18/ukelele/"/>
    <id>http://www.noddl.me/2018/06/18/ukelele/</id>
    <published>2018-06-18T07:36:27.028Z</published>
    <updated>2018-06-18T11:41:19.477Z</updated>
    
    <content type="html"><![CDATA[<p>花了两天上手了Ukelele，正好室友们也打算在父亲节拍一个小短片给父亲们。</p><a id="more"></a><p>由于技艺尚不精，只在副歌部分参与了一下，再次感谢大神吉他和电子琴带我玩耍。</p><p>歌曲是筷子兄弟的《父亲》，我们的短片在这里！</p><video controls="controls" style="width: 100%;"><br>  <source type="video/mp4" src="http://static.noddl.me/father.mp4"><br></video>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;花了两天上手了Ukelele，正好室友们也打算在父亲节拍一个小短片给父亲们。&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://www.noddl.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>澡堂生物见闻录</title>
    <link href="http://www.noddl.me/2018/05/14/bathhouse/"/>
    <id>http://www.noddl.me/2018/05/14/bathhouse/</id>
    <published>2018-05-14T02:30:40.664Z</published>
    <updated>2018-05-19T15:30:43.863Z</updated>
    
    <content type="html"><![CDATA[<p>细细数数住宿生涯已过十年，给我印象最深的莫过于在学校澡堂里千奇百怪的生物们了😈。<br><a id="more"></a></p><h2 id="内裤幽灵"><a href="#内裤幽灵" class="headerlink" title="内裤幽灵"></a>内裤幽灵</h2><p><strong>不知道你在高校里见过穿着内裤洗澡的幽灵。</strong>这是一种神奇的生物，他们常常出没在大一新生入学的前几个月。你可以轻而易举地在公共澡堂里面看见他们，因为他们五颜六色的内裤十分夺目。幽灵们都带有来自南方腼腆，站在澡堂一隅克制着自己并做出最小幅度的动作，以至于不让更多人投来奇怪的目光。</p><p>若有同学问起，他们则会害羞地抛出一系列诸如”顺带连内裤也一起洗了”的言论，以掩盖他们的腼腆的举动。但是，可惜却可贺的是，他们来自南方的骄傲，会在几个月之后被来自北方的同学奇异的目光所炙烤得所剩无几。从此以后幽灵不再是幽灵，他们也融入到了一丝不挂的洗澡大军中，全身的肉坦荡荡地在风中荡漾。</p><h2 id="攀比怪"><a href="#攀比怪" class="headerlink" title="攀比怪"></a>攀比怪</h2><p>“<strong>有人的地方就有江湖，有澡堂的地方就有攀比</strong>“。你时常会在男生澡堂里听见一些关于长度以及体积的形容词，如果你初来乍到，一定会感到困惑不解。发出这些的声音的就是<strong>攀比怪</strong>，其最明显的特征就是贬低他人身体上的某些部位，而夸大自身。部位的范围自头到脚，诸如头发稀疏、大腹便便都是攀比怪们常见的说辞。</p><p>攀比怪这个生物也十分奇特，一般分为两种。第一种为<strong>显式攀比怪</strong>，他们口无遮拦，而且声音洪亮地可以传到澡堂的各个角落，大声地”控诉”着对方身上器官的软小。第二种为<strong>隐式攀比怪</strong>，他们沉默寡言，但是与正常的洗澡客大有不同。隐式攀比怪的视线一般略低于常人，在嘈杂的澡堂中疯狂地打量他人的重要器官。他们一般喜欢在脱裤子的时候调整自己视线，从而进入战斗模式，如果说显式攀比怪造成的是单体伤害，那隐式攀比怪便将是范围性精神攻击。</p><p>以上就是男性攀比怪的种种特征描述，如果你们不幸在澡堂中遇见了他们，猛踢下体就可以让他们安静下来了。 :D</p><h2 id="谦让大师"><a href="#谦让大师" class="headerlink" title="谦让大师"></a>谦让大师</h2><p>这种生物很奇特，他们出现的条件往往是在你换衣服的时候。你会发现他们一直站在你的身边一动不动，一开始会将他们误认为是<strong>攀比怪</strong>。其实不然，你在穿完衣服以后，会发现你站着换衣服的位置，其实也是他们的位置。换句话说就是，<strong>你挡住了他们换衣服。</strong></p><p>但是谦让大师们不吵也不闹，也不提醒你需要稍微让一让。他们就站在一旁，无论是否裸体，静静地等待你换完衣服。当你看向他们的时候，他们或许还会报以微笑。</p><p>如果说澡堂生物图鉴中有好感度排行的话，谦让大师无疑是属于前列的。</p><h2 id="傣族后裔"><a href="#傣族后裔" class="headerlink" title="傣族后裔"></a>傣族后裔</h2><p><strong>泼水节</strong>其实也可以在宿舍楼天天上演。我在读高中的时候，每逢夏季楼道在体育课结束后，都是一片狼藉，接近浴室的地方更是水漫金山。更不幸的是，厕所与浴室相连，如果衣着整齐地去上厕所，时常会遇到一群手里拿着脸盆的壮汉，口中叫着奇怪的语言，疯狂地向你泼水。</p><p>当这种生物群聚在一起洗澡的时候，一些有趣而又激烈的事情几乎一定会发生。他们对脸盆里所含的水量以及能够造成的伤害拿捏得像玩英雄联盟一样精确。对于谁刚刚又泼了自己一脸，这个仇，就算是追到寝室里，也一定要报。</p><p>更有趣的是，如果这些生物们都是南方人，你可能会发现<strong>傣族后裔</strong>与<strong>内裤幽灵</strong>是同一个生物的奇观。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;细细数数住宿生涯已过十年，给我印象最深的莫过于在学校澡堂里千奇百怪的生物们了😈。&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://www.noddl.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>惊弓之鸟</title>
    <link href="http://www.noddl.me/2018/05/09/frightened/"/>
    <id>http://www.noddl.me/2018/05/09/frightened/</id>
    <published>2018-05-09T11:25:14.049Z</published>
    <updated>2018-05-09T11:49:42.676Z</updated>
    
    <content type="html"><![CDATA[<p>条件反射有时候真的挺可怕的。</p><p>在家用电脑的时候，明明一直是正常使用。可不知为何，一旦其他人接近的时候，总会条件反射地关闭当前的窗口。风驰电掣，而又声若蚊蝇。<br><a id="more"></a></p><p>其实就是在写代码或是查阅文档，却惊地像怕被发现了自己什么见不得人的肮脏行径。</p><p>待对方离开后，又开始胡思乱想，生怕对方会因为我的大动作而产生误会，误以为我在浏览一些奇怪的东西。</p><p><strong>我思考了很近，为什么经常会有这种现象发生。</strong></p><p>200X年，想必只要是网民都会饱受各种前凸后翘的美女，突然跳出来“诱惑”你去玩游戏的折磨。与其说是巧合，不如说是必然的。在我父母走过来问我吃不吃水果的时候，发现我的屏幕上的丰乳肥臀，双方面面相觑，从而消失笑容。</p><p>我真的想很把我产生这种奇异条件反射的原因怪罪在无良游戏商头上，一来他们破坏了我与父母之间在电脑使用上的信任，二来他们欺骗了我，因为在游戏里根本就不会有什么美女。别问我是怎么知道的，可能是阿轩告诉我的。</p><p><strong>要是能让我既保留习惯，却不让旁人发现就好了。</strong>虽然我真的没看奇怪的东西，但是就是控制不住自己去关闭窗口。</p><p>于是很久以前，我开始苦练如何无声关闭窗口的技巧。鼠标点击右上角关闭按钮，虽然声音轻、幅度小，但是速度未免太慢。而使用键盘又会产生很响亮的声音，动作幅度也过于剧烈。我的大学同学甚至还研发了一种只要老板站身后就自动关闭窗口的程序。然而这个问题始终没有被很好地解决，我们一直在致力于解决这个问题的路上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;条件反射有时候真的挺可怕的。&lt;/p&gt;
&lt;p&gt;在家用电脑的时候，明明一直是正常使用。可不知为何，一旦其他人接近的时候，总会条件反射地关闭当前的窗口。风驰电掣，而又声若蚊蝇。&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://www.noddl.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>浅谈事务隔离级别</title>
    <link href="http://www.noddl.me/2018/05/06/transaction/"/>
    <id>http://www.noddl.me/2018/05/06/transaction/</id>
    <published>2018-05-05T16:27:15.621Z</published>
    <updated>2018-05-05T16:27:15.621Z</updated>
    
    <content type="html"><![CDATA[<p>学数据库的时候，老师就叫我们背事务隔离级别的概念，默写出相应可能会出现的问题。那么究竟在哪些场景下会因为隔离级别的不同而出现这些问题呢。</p><a id="more"></a><h2 id="事务隔离性"><a href="#事务隔离性" class="headerlink" title="事务隔离性"></a>事务隔离性</h2><p>事务的ACID大家自然都背得很熟了，那么隔离性就是定义了数据库系统中一个操作的结果在何时以何种方式对其他并发操作可见。也就是说，数据库多个事务在不同情况下，是区别<strong>并发执行</strong>与<strong>串行执行</strong>的。正因为如此数据库设置了锁的概念，来确保并发控制机制能够有效运行下去。</p><p>所以谈论到的<strong>隔离级别</strong>，通常也与锁设置方式以及锁类型有关。</p><h2 id="隔离级别"><a href="#隔离级别" class="headerlink" title="隔离级别"></a>隔离级别</h2><p>为了获取更高的隔离性，数据库系统的锁机制或者多版本并发控制机制都会影响并发。很多数据库定义了不同的<strong>事务隔离级别</strong>来控制其锁的程度。根据标准定义，我们都知道有：未提交读 read uncommited, 提交读 read commited, 可重复读 repeatable read, 可串行化 Serializable。</p><p>虽然中文很拗口，但是这些隔离级别的名字其实是<strong>解决上一个隔离级别所出现问题而提出的解决方案</strong>（除了 read uncommited）。</p><p>他们的区别之一在于锁对于R/W事务上设置的不同，当然最高隔离级别也存在对表锁的设置。</p><ul><li>read uncommited: 不对读事务设置锁；对写事务设置<strong>行级共享锁</strong></li><li>read commited: 对读事务设置<strong>行级共享锁，读完就释放</strong>；对写事务设置<strong>行级互斥锁，直到事务结束才释放</strong></li><li>repeatable read: 对读事务设置<strong>行级共享锁，直到事务结束才释放</strong>；对写事务设置<strong>行级互斥锁，直到事务结束才释放</strong></li><li>Serializable: 所有事务串行执行，读事务设置<strong>表级共享锁</strong>；写事务设置<strong>表级互斥锁</strong></li></ul><p>可以看出来，隔离级别的提高，其实也是锁的严格程度的提高。要知道，相同条件下，锁越多，越严格那么性能也就越低。</p><p>除了脏读以外，其他因为隔离级别导致的问题，<strong>都会出现在当前隔离级别与比当前隔离级别要弱的隔离级别中</strong>。</p><p>共享锁：多个事务对于加了锁的数据，只能读，不能写；<br>互斥锁：排他锁允许当前事物删除或更新一行记录，其他事务不能操作该数据。</p><h3 id="脏读"><a href="#脏读" class="headerlink" title="脏读"></a>脏读</h3><p>只会出现在read uncommited隔离级别的问题，因为read uncommited不对读事务设置锁，并且对写事务只设置<strong>行级共享锁</strong>。</p><p>示意图如下:</p><p>-T1–T2–R1–W1–R2–T2–T1-</p><p>T2事务全程发生在T1事务的进行时，因为没有对记录设置行级互斥锁，所以在W1写操作进行前后，可以随时读取该记录，导致了R1和R2读到的不一样。非常危险，这就是脏读。</p><h3 id="不可重复读"><a href="#不可重复读" class="headerlink" title="不可重复读"></a>不可重复读</h3><p>因为读事务在读完一条数据以后(没有结束事务)，就立马释放了行级共享锁，归根结底，就是这一原因导致了不可重复读的发生。</p><p>-T1–R1–T2–W1–T2–R2-</p><p>R1读完就释放了锁，但是T1事务未结束，这时候另外一个T2事务开始了，在T2事务结束前，第一个事务都不能对这条记录进行加锁了(想想为什么)，所以R2要在T2结束后进行。这时候R2读到的数据与R1又不一样了。这就是不可重复读。</p><h3 id="幻读"><a href="#幻读" class="headerlink" title="幻读"></a>幻读</h3><p>我们都针对<strong>某一记录</strong>读操作与写操作添加锁，并且保证了事务结束时才释放锁了。这是还会有问题吗？</p><p>我们一直只针对某一条记录来进行操作，这时候要是表内又新来了一条数据呢，它可不受任何读写锁的约定呀。</p><p>示意图:</p><p>-T1–R1–T2–C–T2–R2–T1-</p><p><em>R1、R2在这里表示了读整个表的操作</em>，C代表了在T2事务期间，新增的一条记录，你会发现在事务T1内的两次读（R1，R2），得到的数据不一样。</p><p>因为R1只对原有的N条记录加了锁，而没对新增的记录加锁，这就导致T2事务可以与T1事务并发执行，最终导致了R2与R1读到的记录不一致。</p><p>所以我们可以提高事务隔离级别来防止这种情况出现，但是在也就是意味着，事务之间也无并发执行可言了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学数据库的时候，老师就叫我们背事务隔离级别的概念，默写出相应可能会出现的问题。那么究竟在哪些场景下会因为隔离级别的不同而出现这些问题呢。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.noddl.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>爱江山，爱摄影</title>
    <link href="http://www.noddl.me/2018/05/06/photography/"/>
    <id>http://www.noddl.me/2018/05/06/photography/</id>
    <published>2018-05-05T16:27:15.619Z</published>
    <updated>2018-05-05T16:27:15.619Z</updated>
    
    <content type="html"><![CDATA[<p>经某同学的提醒，出的片子，还是要放出来让大伙一起瞧瞧比较好。持续更新着…</p><a id="more"></a><p><img src="http://static.noddl.me/cup.JPG" alt="cup"><br>Strikingly实习时送的杯子，容量特别大，喝满3杯就似乎满足了我一天的需水量。公司有很多这样的杯子，都藏在飘窗边小床的里面。</p><p><img src="http://static.noddl.me/DSC00209.jpg" alt="DSC00209"><br>某同学退还给我的小鹿，我也没地方放，每天抱着睡觉。10月份的时候突发奇想，想让她晒晒太阳，顺便来了一张萌照。</p><p><img src="http://static.noddl.me/DSC00338.jpg" alt="DSC00338"><br>在苏州诚品生活楼顶拍的，当时身边有两个小伙伴，大家一起手忙脚乱地注视着暮色到来。再次他们带我一起玩耍。</p><p><img src="http://static.noddl.me/moon.jpg" alt="moon"><br>健身回来发现有月全食，赶紧借了洞洞的长焦，跟边上一起拍照的同学聊了很久才回去。回去后发现没对好焦，糊了。</p><p><img src="http://static.noddl.me/七号楼.jpg" alt="七号楼"><br>其实一开始我也不相信校园里有这样的建筑的，其实就在七号楼一楼那个小平台，抬头就是。那天临时起意，决定把嘉定校区全部的建筑拍个遍，我认为这是最好也是最出乎意料的一张。</p><p><img src="http://static.noddl.me/西北21.jpg" alt="西北21"><br>也是拍建筑那天，在校园西北角落发现的一栋建筑。</p><p><img src="http://static.noddl.me/刘看山1.jpg" alt="刘看山1"><br>2018年1月25日，上海下了很大的雪。我带着刘看山一起出门看雪景。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经某同学的提醒，出的片子，还是要放出来让大伙一起瞧瞧比较好。持续更新着…&lt;/p&gt;
    
    </summary>
    
      <category term="摄影" scheme="http://www.noddl.me/categories/%E6%91%84%E5%BD%B1/"/>
    
    
  </entry>
  
  <entry>
    <title>你和播放器</title>
    <link href="http://www.noddl.me/2018/05/06/player-with-you/"/>
    <id>http://www.noddl.me/2018/05/06/player-with-you/</id>
    <published>2018-05-05T16:27:15.619Z</published>
    <updated>2018-05-05T16:27:15.619Z</updated>
    
    <content type="html"><![CDATA[<p>呐，不知道你有没有听说过一种比喻</p><p>与其说是用播放器，不如说是与播放器谈恋爱</p><a id="more"></a><p><br></p><p>听起来，就好像拿女朋友与播放器相提并论</p><p>这听起来似乎很荒谬，也确实很荒谬</p><p><br></p><p>“换一个新的播放器就像与女生分手一样”</p><p>你在前任那里收藏的一首首歌曲，路边听的，挂耳机在地铁上听的，甚至是她不自觉推荐给你的</p><p>她推荐的歌恰到好处地也受你的青睐，就像你肚子里可爱的小蛔虫</p><p>尽管有很多小毛病，还是克制不住地爱她，逢人就夸</p><p>经常会这样想着</p><p>“让我跟她分开，这是不可能的事情吧。”</p><p><br></p><p>不知道从什么时候开始，你觉得她越来越作</p><p>她嘟嘴生气的样子，开始懒得去搭理</p><p>甚至有时候，三番五次触及你的底线</p><p>像是老套的电视剧，这一天终于到来了</p><p>“其实这不代表我不爱她了，只是不得不分开而已。“</p><p><br></p><p>朋友开始给你物色其他”选择“</p><p>”选择“会唱的歌比前任丰富得多，真是一颗有趣的灵魂呢</p><p>性格也比前任要好很多，是一颗完美的灵魂</p><p><br></p><p>可是啊，在前任那里收藏过的歌曲，是在天天搭乘的地铁上听的，是熟悉的小巷里听的</p><p>现在偶尔听到它们，也觉得这些歌很有过去的味道。</p><p>但是你在现任那里，是无论如何也不会继续收藏了吧。</p><p><br></p><p>如果听过的歌，能立马抛之脑后</p><p>或者收藏的歌单也能一并转移</p><p>那么对于播放器的比喻，原谅我举的实在不恰当。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;呐，不知道你有没有听说过一种比喻&lt;/p&gt;
&lt;p&gt;与其说是用播放器，不如说是与播放器谈恋爱&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://www.noddl.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>左左的2018暑期实习面试经历</title>
    <link href="http://www.noddl.me/2018/05/06/interview/"/>
    <id>http://www.noddl.me/2018/05/06/interview/</id>
    <published>2018-05-05T16:27:15.618Z</published>
    <updated>2018-05-05T16:27:15.618Z</updated>
    
    <content type="html"><![CDATA[<p>因为在17年就已经面过蚂蚁金服前端岗（据说拿了B+），所以在今年2月左右就收到蚂蚁金服前辈的内推邮件。由于当时在忙着美赛，就没准备投递的事情。转眼就到寒假，化身一枚咸鱼看看龙灯爬爬山，又耽搁了一阵子。直到寒假最后一天，才经过前辈点醒，是时候要开始准备春招了。</p><a id="more"></a><p>开学就马上更新好了简历，分别给阿里腾讯百度(BAT)投递了过去，大致是前端、node、运维岗。心里想着能去做全栈就好了，总不希望做个切图仔的。</p><h2 id="阿里巴巴"><a href="#阿里巴巴" class="headerlink" title="阿里巴巴"></a>阿里巴巴</h2><p>阿里的春招形式与去年没多大变化，文化网测 -&gt; 编程题网测 -&gt; 5、6轮面试，基本就走完了流程，其中应该是4轮技术面 + 2轮HR。</p><h3 id="网测"><a href="#网测" class="headerlink" title="网测"></a>网测</h3><p>文化面不多说，我的价值政治观一直比较正确。接下来就是笔试题，因为当前还在春招时期，碍于泄题之嫌，我就不细说了，总之就是一题，限时30分钟，前端题不难，但是DOM操作要练好。</p><h3 id="一轮"><a href="#一轮" class="headerlink" title="一轮"></a>一轮</h3><p>完成网测后的两天，第一轮电面就打电话来了。3月12日。<br>没有自我介绍，没有项目介绍，直接开始问后端：消息队列、数据库优化、算法、底层网络等等。一口气回答了一堆，然后开始疑惑我投的前端岗位，怎么面这么后端的东西。后来发现是搞错了，因为我的简历里包含了很多后端的东西。🤣</p><p>个人对压力测试玩的比较少，只是了解一下大概。数据结构的考点基本是教科书式的，链表排序之类的。HTTP和RPC，哈希表。</p><p>虽然自我感觉发挥不好，但是面试官却觉得还好。</p><h3 id="二轮"><a href="#二轮" class="headerlink" title="二轮"></a>二轮</h3><p>根据去年的经验，一般是要隔个2、3天，才有下一轮面试。但是没想到3月13日，也就是第二天，下午同一时间，二面开始了。（当时我正要进教室上课呢 😈）</p><p>于是匆匆忙忙下楼，在校园里随便找了一个小草丛开始了第二轮电话面试。</p><p>二轮持续了整整100分钟，因为有一些没有标准答案的水问。</p><ul><li>编辑距离算法</li><li>手写快排</li><li>union sql查询</li><li>DP</li><li>二叉树</li><li>关于Kubernetes服务编排项目的架构</li><li>服务解耦</li><li>数据库优化措施、读写分离之类的</li><li>数据库事务隔离</li></ul><p>也谈了谈敏捷开发，以及我对项目过程的把控。在这两点上，我还是回答得比较好的。关于Kubernetes等用于微服务的技术，基本是根据我简历里写的项目来问。</p><p>最后，透露我可以转到全栈岗，于是下一轮开始由前端组进行交叉面试。我不禁喜上眉梢。</p><h3 id="三轮"><a href="#三轮" class="headerlink" title="三轮"></a>三轮</h3><p>又是一天以后，3月14日。下午2点，一个声音好听的小哥哥开始了对我的在线面试。</p><p>我在简历里写了精通webpack，于是开始让我谈谈webpack的实现机制，以及详细问了css-loader的实现。还让我讲了讲我以前做过的一些plugins，以及babel插件。</p><p>蚂蚁作为React大户，React相关的东西肯定是必考的，redux生态，Virtual DOM。虽然我在期间依然安利了一波Angular，但是效果似乎并不好哈哈😈。</p><p>最后开始手写一个Promise，效果不错。开心地结束了这次面试。</p><h3 id="四轮"><a href="#四轮" class="headerlink" title="四轮"></a>四轮</h3><p>依然是交叉面，但是都是些开放性的问题。例如看什么技术博客、你的强项是什么之类的。与面试官谈了谈我对rxjs的好感度，以及分析了一下medium为什么会火起来 2333。</p><p>因为是在开车的时候被打了电话，一回到寝室也没准备就开始了。气氛很轻松，开心地结束这轮。</p><h3 id="五轮"><a href="#五轮" class="headerlink" title="五轮"></a>五轮</h3><p>依然交叉面前端，但是更多是谈谈做过了哪些项目。我讲了讲微服务相关的项目，以及webpack遇到的坑。据悉下一轮就是HR面啦。</p><h2 id="腾讯"><a href="#腾讯" class="headerlink" title="腾讯"></a>腾讯</h2><p>怪不好意思的，投腾讯的时候很粗心，不小心把去年的low简历投了过去。导致了尴尬。</p><p>去年其实也投了腾讯，而且是内推。但是愚人节那天去了崇明岛玩，没带电脑。下午的时候手机收到要笔试的通知，自然是翘了。于是就没有后续了。</p><p>今年没有找内推，野投。有趣的是，很快有了回应，并告诉我周六去上海腾讯总部面试。</p><h3 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h3><p>3月17日。感慨一下腾云大厦离我校好远。</p><p>接待我的是一个笑起来甜甜的小哥，坐下后马上开始做笔试题。大致是50道左右的多选题，从操作系统、C++、算法、前端、网络、数据库应有尽有。关键还是多选题，是一场苦战。</p><h3 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h3><p>差不多做到最后一题，我的面试官到了。笑容小哥哥在边上改我的卷子，面试官开始面我。</p><p>先自我介绍，然后：</p><ul><li>用户体验优化</li><li>浏览器机制</li><li>HTTP2</li><li>webpack</li><li>旧项目改造，与我在前东家做的rails改造很像</li><li>项目选型考虑</li></ul><h3 id="二面"><a href="#二面" class="headerlink" title="二面"></a>二面</h3><p>二面以node为主</p><ul><li>Stream</li><li>express middleware实现</li><li>单线程调用栈，以及优先级</li><li>webpack</li><li>DNS实现</li></ul><p>看得出来，小哥哥对我还是挺满意的。更多题目我也忘记了，印象深刻的就这么几个。</p><h3 id="三面"><a href="#三面" class="headerlink" title="三面"></a>三面</h3><p>胡子小哥哥坐镇，让我谈谈HTTP2，我背了一些新特性，但是说不出所以然。<br>还有前端如何做一款类似于美图秀秀的图形处理程序。</p><p>三面比较短，说实话，我答得不好。因为确实缺少相关的经验。</p><h3 id="最终面"><a href="#最终面" class="headerlink" title="最终面"></a>最终面</h3><p>结果挺理想，跟我谈了谈该团队目前在做的事情。Typescript讲了讲。具体结果还是要看我后续的更新吧。</p><h3 id="复试"><a href="#复试" class="headerlink" title="复试"></a>复试</h3><p>3月23日下午，被通知要去参加复试…</p><p>恐怖的压力面，boss全程看电脑。技术倒是不难，就是氛围有点儿紧张。让我这个老油子也有点活泼不起来。</p><p>继续等下一轮吧。</p><!--## 摩根士丹利那天刚好看见摩根在电信学院宣讲，就去听了一下。虽然场子不大，但是大家都很真诚的样子。找了HR要了内推，于是直接投出了简历。### 电话面试可能是因为内推吧，就没有笔试环节，直接一个电话打来，告诉我第二天有面试，**全英文**。本着对自己的口语抱有无可救药的态度，完全没有如何复习，到了第二天。一个小哥哥打电话来的，电话线路不太好，很声音模糊，配上英文简直可以说是让我发抖了。我讲了讲自我介绍，随后马上进入了他的回合：- OOP介绍一下- 反射- 设计一个Web页面- 等等等都是特别特别简单的问题（如果是中文的话😭）。让我介绍OOP，中文我可以聊一下午。英文我就比较简练而无能为力了。最后谈谈我的项目的时候，我讲了半天kubernetes和microservices，然后断断续续地没讲清楚。时间到了还没讲完，中途就被掐掉了。我以为没有下一面了，结果呢...### Onsite结果就是过了两周，到了摩根公司onsite。在花木路，离我校不近，轨道交通令我哭泣。办公楼内部设计让我感到了设计师的不友好，进门之后，全是西装革履的面试者让我这个蓝色马甲少年感觉压力巨大。都穿着西装+皮鞋，而我是马甲+帆布鞋。都是硕士，而我是本科。我能进这个门真是万幸呢，挂了也值了。在HR简单介绍之后，大家一起做了35分钟的手写编程题，3道题，简单，但是我似乎做错了好多。随后进入办公室开始单独面试（**当然全英文**😈）### 一面我真的是作死，我不小心顺带提了一下最近在做区块链的项目，于是接下来的一半时间都在讨论区块链：化身金融巨鳄，在摩根N层楼的水晶办公室里，大论未来经济走势，小时代电影的感觉让我恍恍惚惚。（编不下去了）在聊完区块链之后，开始批判我做了题，思路错了，说我不看题，一看就是刷题刷多了。随后让我设计一个页面，easy。### 二面让我设计一个SPA，包含ajax之类，easy。让我设计一套物理机与虚拟机资源分配的问题-->]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因为在17年就已经面过蚂蚁金服前端岗（据说拿了B+），所以在今年2月左右就收到蚂蚁金服前辈的内推邮件。由于当时在忙着美赛，就没准备投递的事情。转眼就到寒假，化身一枚咸鱼看看龙灯爬爬山，又耽搁了一阵子。直到寒假最后一天，才经过前辈点醒，是时候要开始准备春招了。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.noddl.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>装病怪谈</title>
    <link href="http://www.noddl.me/2018/05/06/malinger/"/>
    <id>http://www.noddl.me/2018/05/06/malinger/</id>
    <published>2018-05-05T16:27:15.618Z</published>
    <updated>2018-05-05T16:27:15.618Z</updated>
    
    <content type="html"><![CDATA[<p>当然，我不是在装病，我是在进行一场经过精心筹备的演出。<br><a id="more"></a></p><p>要问我在初中究竟学到了些什么</p><p>莫过于集请假大法于一体</p><p>毕竟社会需要多功能复合型人才嘛<br><br><br>初中请假机制极其苛刻</p><p>小打小闹都瞒不过老师</p><p>事假一般不批</p><p>从而习得一身装病奇术</p><!-- more --><p>应对一般老师</p><p>口水化痰这招绰绰有余 再配上几声湿湿的咳嗽</p><p>可谓惟妙惟肖 栩栩如生</p><p>此招经过我的推广 在班里早已烂大街 智者不应与之共伍</p><p>装病要诀在一个“诚“字 患者的痛苦不仅由嘴上说出 更要写在脸上</p><p>表演开始之前忌体育运动 更大讳饱餐烂食</p><p>在此基础上再配合清水洗面 浓涂防晒霜于小脸蛋</p><p>彩排三番 举止轻柔 静若处子 为的是骗人骗己</p><p>演出筹备关键在掌握病理</p><p>我所创立的几大奇招皆建立在发生的事实上</p><p>即 我以前得过这种病或类似的病</p><p>化屎为稀术 便是其中最为典型的例子</p><p>腹中之物与脑中之疾 皆不可视</p><p>是最好的病因说辞</p><p>稀自昨日始 如厕至今已有六七</p><p>今早病情最甚 吃红见红 食绿拉绿</p><p>虽自备急药 却效果平平</p><p>如今以绝食为招 故腹中无物 症状略退</p><p>吾已食药甚多 又以养息为辅 验血无恙之因或出于此</p><p>恐日后隐患于学业 望赐病假条</p><p><br>&gt;</p><p>班上的某方姓同学清楚地了解到自己易上火的体质</p><p>在决定要请假回家打游戏后</p><p>毅然选择在小卖部当场吞下十包辣条</p><p>果不其然 他如愿以偿 只是花去了医疗费</p><p>从此辣条封喉一术成为他毕生绝学</p><p>但这种招数被我所不齿</p><p>为何</p><p>装病请假同样讲究一个“装”字</p><p>真的有办法搞生病 目地虽已达到 却又得不偿失了</p><p><br></p><p>到了时机成熟时 观众到场 演员就位</p><p>演出进行 语速放慢 放慢再放慢  但千万别结巴</p><p>目光如炬 紧盯老师双眼 真诚而又无助</p><p>若是老师无动于衷 俨然一副看透你的老司机模样</p><p>莫慌张 只需静静等待不必张口 大艺术家言多也有失</p><p>沉寂几个世纪后 老师终于缓缓开声</p><p>无非 你何病 病几何 病假条何在</p><p>好个“三何”攻势 可惜你已将套路烂记于心</p><p>滔滔昨日所学病理 谈谈病患之苦痛</p><p>有气无力 却不矫揉造作</p><p>使自己成为心有力于学习而力不足的悲怆斗士</p><p>抒发自己近日所受的病魔缠身之创</p><p>同样 别忘了时不时展示一下你的小白脸</p><p><br></p><p>装了几十次病 以为自己天下无敌</p><p>心高气傲 在请假界目中无人</p><p>若诸君心中起了此念</p><p>不妨抽空问问班上成绩第一的同学是如何请假的</p><p><br></p><ul><li><p>“老师，我想回家洗澡。”</p></li><li><p>“好，你家在哪，老师送你回去。”</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当然，我不是在装病，我是在进行一场经过精心筹备的演出。&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://www.noddl.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="生活" scheme="http://www.noddl.me/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>接offer这件事</title>
    <link href="http://www.noddl.me/2018/05/06/offer-gf/"/>
    <id>http://www.noddl.me/2018/05/06/offer-gf/</id>
    <published>2018-05-05T16:27:15.618Z</published>
    <updated>2018-12-01T15:02:22.318Z</updated>
    
    <content type="html"><![CDATA[<p>  今天跟好朋友又一次不可避免地讨论起她的对象。她的对象很神秘，我也很是佩服她的耐心。因为她的对象已经很久很久没有出现了。<br><a id="more"></a></p><p>我的朋友，说她没有对象，这是不完全不能被认同的，她毕竟是身为一个如此优秀的女孩子。所以与其说她很久没有谈恋爱了，不如说她是完全不想去找。所以我俩话题的风向标，总是从一声“唉”的感慨开始，慢慢转向情感话题。从最初坚定的单身贵族主义，到如今各种为对方儿子取名，可见对方近些年，各个牌子的狗粮也都尝了个遍。虽然都是无意义地瞎扯，比如讨论一下各个牌子狗粮的口感，但是好歹也是有话题的。</p><p>回到话题尚未跑偏的那会儿。毕业季，我和她都开始忙着找工作单位实习、一旦涉及到资本主义，就会提起钱；一提钱，双方就会因为钱而签约。而offer就是“签约”的儿子，但“签约”只负责生，不负责养。那自然的，接offer的我们就成了最苦逼的保姆。这种吃力不讨好的事情，却人人都挤破头地喜欢。接了offer，好似万年单身狗，突然有了一个愿意跟你处下去的姑娘。虽然日子可能不会太长，但是好歹不再依靠吃狗粮为继了。而且接offer这件事本身，就和谈恋爱也有很多相同点。</p><p>为什么我坚持不用社交软件（知乎算不算），因为我总是感到，如果一个人想要脱单就去用社交软件，就好像：在你毕业之际走投无路之时，突然发现自己还有母校这种靠山存在（平时翘课的时候永远也想不起）。于是你抱紧了学校的大腿，想让学校给你安排一份实习。学校当然愿意啊，不然芸芸学子打着母校的英名在外好吃懒做传出去多不好看。你也不在乎实习单位的好差了，只要有一根稻草能抓住就已是万幸。社交软件就像学校一样，当然很容易就能帮助我们安排一段良好的因缘，毕竟它一次塞上百个姑娘给你“任君自由选择”。</p><p>这样的统筹安排，在缘分论者的观念中是不可饶恕的。所以自然，多数人选择到社会中“广撒网”。临近毕业，诸如以老学长的身份多参加一下社团活动、学生会的哥们推荐一下、退伍的兵哥哥帮忙在军训的时候物色一下新来妹子之类的老渔夫本领，不下海当然是学不会的。不过宅在家里的二次元渔夫，也是完全不屑这种现充行为的。说回接offer，既然广撒网这种行为是有客观原因的，那么各种投简历收offer，也自然无可厚非了。BAT走一走，FLAG遛一遛，一圈下来再去小厂装一波，自然收获颇丰。也正是应了杨同学那句话：“如果爱情要有收offer这么简单，那就好了”</p><p>老渔夫表示想要一条前凸后翘金龙鱼的心情，就像一名应届生想要收到一份工资高加班少offer的心情一样迫切。然而金龙鱼不常有，现实里渔网里大多都是黝黑的鲶鱼。很多企业也喜欢吊着应届生，面试周期极长无比，仿佛你向金龙鱼表白的时候，她却对你说：“我有一段很长的考察期，时不时会派出我的前男友们来刁难你，用以考验你对我的爱”。这个过程短则一两月，长则半年有余。在这期间，她前男友们的百般刁难让你抓破了头，而金龙鱼的肥美又让你日夜好逑。当然，最难受的是，网里已经捕获的鲶鱼还在上下乱窜，时不时提醒一下你是不是该考虑一下它们了。往往几日之后，鲶鱼便会纷纷坦言，如果你一周之内再不有所表示，那么它们就会离开。</p><p>于是你仔细一想，发现事情并不简单。如果鲶鱼们都走了，而金龙鱼又没有钓到，那么自己不久以后又将回到曾经吃狗粮度日的黑暗生活。口腔里还弥漫的狗粮味窜到了脑门，大脑开始大吼，并警告你是时候该做出选择了。你是要吃前凸后翘未到手的金龙鱼，还是在眼下这些鲶鱼挑一只过日子。</p><p>长辈通常会跟我们说，爱情这个东西，只有更好的没有最好的。我们选择了一个，总会有更优秀的目标摆在我们面前。可是我们年轻人其实也总是会选择抛开这些教诲，并给了长辈一头槌，在追求理想中金龙鱼的道路上越走越远，顿顿狗粮也在所不惜。因为啊，在这个过程中，我们已经让自己变成了一个更加优秀的人。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  今天跟好朋友又一次不可避免地讨论起她的对象。她的对象很神秘，我也很是佩服她的耐心。因为她的对象已经很久很久没有出现了。&lt;br&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://www.noddl.me/categories/%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>HTTP2特性漫谈</title>
    <link href="http://www.noddl.me/2018/05/06/http2/"/>
    <id>http://www.noddl.me/2018/05/06/http2/</id>
    <published>2018-05-05T16:27:15.617Z</published>
    <updated>2018-05-05T16:27:15.617Z</updated>
    
    <content type="html"><![CDATA[<p>在2018年春招中，没有回答出HTTP2新特性的具体细节，甚是懊恼。看来不能仅仅因为兼容性的问题，就不顾HTTP2这票潜力股😈。</p><a id="more"></a><p>首先概况几个HTTP2相对于HTTP1.1的<strong>新特性</strong>:</p><ul><li>二进制分帧层</li><li>头部压缩</li><li>多路复用</li><li>Server Push</li></ul><h2 id="为什么不是HTTP-1-2"><a href="#为什么不是HTTP-1-2" class="headerlink" title="为什么不是HTTP/1.2?"></a>为什么不是HTTP/1.2?</h2><p>为了实现 HTTP 工作组设定的性能目标，HTTP/2 引入了一个新的二进制分帧层，该层无法与之前的 HTTP/1.x 服务器和客户端向后兼容，因此协议的主版本提升到 HTTP/2。</p><h2 id="二进制分帧层"><a href="#二进制分帧层" class="headerlink" title="二进制分帧层"></a>二进制分帧层</h2><p>HTTP/2 所有性能增强的核心在于新的二进制分帧层，它定义了如何封装 HTTP 消息并在客户端与服务器之间传输。如下图所示，它在应用层里，多定义了一个新的子层：<br><img src="https://developers.google.com/web/fundamentals/performance/http2/images/binary_framing_layer01.svg" alt=""></p><p>而HTTP的语义（包括各种动词、方法、标头）都不受影响，不同的是传输期间对它们的编码方式变了。HTTP/1.x 协议以换行符作为纯文本的分隔符，而 HTTP/2 将所有传输的信息分割为更小的消息和帧，并采用二进制格式对它们编码。<strong>但是</strong>！HTTP/1.x 客户端无法理解只支持 HTTP/2 的服务器，反之亦然。</p><h3 id="数据流、消息和帧"><a href="#数据流、消息和帧" class="headerlink" title="数据流、消息和帧"></a>数据流、消息和帧</h3><ul><li>数据流：已建立的连接内的双向字节流，可以承载一条或多条消息。stream</li><li>消息：与逻辑请求或响应消息对应的完整的一系列帧。message</li><li>帧：HTTP/2 通信的最小单位，每个帧都包含帧头，至少也会标识出当前帧所属的数据流。frame</li></ul><p>他们遵循以下的规则:</p><ol><li>所有通信都在一个 TCP 连接上完成，此连接可以承载任意数量的双向数据流。</li><li>每个数据流都有一个唯一的标识符和可选的优先级信息，用于承载双向消息。</li><li>每条消息都是一条逻辑 HTTP 消息（例如请求或响应），包含一个或多个帧。</li><li>帧是最小的通信单位，承载着特定类型的数据，例如 HTTP 标头、消息负载，等等。 <strong>来自不同数据流的帧可以交错发送，然后再根据每个帧头的数据流标识符重新组装。</strong></li></ol><p>所以大致的示意图是:<br><img src="https://developers.google.com/web/fundamentals/performance/http2/images/streams_messages_frames01.svg" alt=""></p><p>简言之，HTTP/2 将 HTTP 协议通信分解为二进制编码帧的交换，这些帧对应着特定数据流中的消息。所有这些都在一个 TCP 连接内复用。这是 HTTP/2 协议所有其他功能和性能优化的基础。</p><h2 id="头部压缩"><a href="#头部压缩" class="headerlink" title="头部压缩"></a>头部压缩</h2><p>HTTP头是比较长的，如果发送的数据比较小时，也得发送一个很大的HTTP头部。当这种请求数很多的时候，会导致网络的吞吐率不高。并且，比较大的HTTP头部会迅速占满<strong>慢启动</strong>过程中的<strong>拥塞窗口</strong>，导致延迟加大。所以HTTP头的压缩显得很有必要。</p><p>HTTP/2使用了新的压缩方法，在规范<a href="https://tools.ietf.org/html/rfc7541" target="_blank" rel="noopener">RFC 7541</a>进行了说明。关于头部压缩，规范的附录举了个很生动的例子。这里用这个例子做为说明，解释可以怎么对HTTP头部进行压缩。</p><h2 id="多路复用"><a href="#多路复用" class="headerlink" title="多路复用"></a>多路复用</h2><p>传统的HTTP/1.1为了提高并发性，得通过提高连接数，即同时多发几个请求，因为一个连接只能发一个请求，所以需要多建立几个TCP连接。建立TCP连接需要线程开销，Chrome同一个域最多同时只能建立<strong>6个连接</strong>(考点哟)。所以就有了雪碧图、合并代码文件等减少请求数的解决方案。</p><p>在HTTP/2里面，一个域只需要建立一次TCP连接就可以传输多个资源。多个数据流/信号通过一条信道进行传输，充分地利用高速信道，就叫多路复用（Multiplexing）。</p><p>在HTTP/1.1里面，一个资源通过一个TCP连接传输，一个大的资源可能会被拆成多个TCP报文段，每个报文段都有它的编号，按照从前往后依次增大的顺序，接收方把收到的报文段按照顺序依次拼接，就得到了完整的资源。当然，这个是TCP传输自然的特性，其实和HTTP/1.1没有直接关系。</p><p>那么怎么用一个连接传输多个资源呢？HTTP/2把每一个资源的传输叫做流(Stream)，每个流都有它的唯一编号stream id，一个流又可能被拆成多个帧(Frame)，每个帧按照顺序发送，TCP报文的编号可以保证后发送的帧的顺序比先发送的大。在HTTP/1.1里面同一个资源顺序是依次连续增大的，因为只有一个资源，而在HTTP/2里面它很可能是离散变大的，中间会插着发送其它流的帧，但只要保证每个流按顺序拼接就好了。如下图所示：<br><img src="http://static.noddl.me/15213774079923.jpg" alt=""></p><h2 id="Server-Push"><a href="#Server-Push" class="headerlink" title="Server Push"></a>Server Push</h2><p>当我们使用HTTP/1.1的时候，Chrome最多同时加载6个资源。</p><p>虽然使用了HTTP/2没有了只能同时加载6个资源的限制，但是我们发现css或js需要在html解析了之后才能触发加载，而图片如果是通过JS的new Image触发加载，所以它们需要等到JS下载完并解析好了才能开始加载。</p><p>所以Server Push就是为了解决这个加载延迟问题，提前把网页需要的资源Push给浏览器。Nginx是从1.13.9版本开始支持。给nginx.conf添加以下配置：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> = /html/demo/index.html &#123;</span><br><span class="line">    <span class="attribute">http2_push</span> /html/demo/main.js;</span><br><span class="line">    <span class="attribute">http2_push</span> /html/demo/main.css;</span><br><span class="line">    <span class="attribute">http2_push</span> /html/demo/images/<span class="number">0</span>.png;</span><br><span class="line">    <span class="attribute">http2_push</span> /html/demo/images/<span class="number">1</span>.png;</span><br><span class="line">    <span class="attribute">http2_push</span> /html/demo/images/<span class="number">2</span>.png;</span><br><span class="line">    <span class="attribute">http2_push</span> /html/demo/images/<span class="number">3</span>.png;</span><br><span class="line">    <span class="attribute">http2_push</span> /html/demo/images/<span class="number">4</span>.png;</span><br><span class="line">    <span class="attribute">http2_push</span> /html/demo/images/<span class="number">5</span>.png;</span><br><span class="line">    <span class="attribute">http2_push</span> /html/demo/images/<span class="number">6</span>.png;</span><br><span class="line">    <span class="attribute">http2_push</span> /html/demo/images/<span class="number">7</span>.png;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如此一来就可以享受预加载带来的页面加载速度上的提升了。</p><p>参考资料:</p><ul><li><a href="https://fed.renren.com/2018/03/18/chrome-http2/" target="_blank" rel="noopener">https://fed.renren.com/2018/03/18/chrome-http2/</a></li><li><a href="https://developers.google.com/web/fundamentals/performance/http2" target="_blank" rel="noopener">https://developers.google.com/web/fundamentals/performance/http2</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在2018年春招中，没有回答出HTTP2新特性的具体细节，甚是懊恼。看来不能仅仅因为兼容性的问题，就不顾HTTP2这票潜力股😈。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.noddl.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
</feed>
